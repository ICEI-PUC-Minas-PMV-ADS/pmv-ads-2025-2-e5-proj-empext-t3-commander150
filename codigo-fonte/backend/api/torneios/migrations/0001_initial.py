# Generated by Django 5.2.6 on 2025-11-01 14:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Rodada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_rodada', models.IntegerField()),
                ('status', models.CharField(default='Pendente', help_text='Ex: Pendente, Em Andamento, Finalizada', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_mesa', models.IntegerField()),
                ('time_vencedor', models.IntegerField(blank=True, help_text='1=Time 1, 2=Time 2, 0=Empate', null=True)),
                ('pontuacao_time_1', models.IntegerField(default=0, help_text='Placar do time 1 (ex: 2 vitórias parciais)')),
                ('pontuacao_time_2', models.IntegerField(default=0, help_text='Placar do time 2 (ex: 1 vitória parcial)')),
                ('id_rodada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesas', to='torneios.rodada')),
            ],
        ),
        migrations.CreateModel(
            name='Torneio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do torneio', max_length=255)),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do torneio', null=True)),
                ('status', models.CharField(default='Aberto', help_text='Ex: Aberto, Em Andamento, Finalizado', max_length=50)),
                ('regras', models.TextField(help_text='Regras específicas do torneio')),
                ('banner', models.ImageField(blank=True, help_text='Banner do torneio', null=True, upload_to='torneios/banners/')),
                ('vagas_limitadas', models.BooleanField(default=True, help_text='Se o torneio tem limite de vagas')),
                ('qnt_vagas', models.PositiveIntegerField(blank=True, help_text='Quantidade de vagas disponíveis', null=True)),
                ('incricao_gratuita', models.BooleanField(default=True, help_text='Se a inscrição é gratuita')),
                ('valor_incricao', models.DecimalField(blank=True, decimal_places=2, help_text='Valor da inscrição em reais', max_digits=10, null=True)),
                ('pontuacao_vitoria', models.PositiveIntegerField(default=3, help_text='Pontos por vitória')),
                ('pontuacao_derrota', models.PositiveIntegerField(default=0, help_text='Pontos por derrota')),
                ('pontuacao_empate', models.PositiveIntegerField(default=1, help_text='Pontos por empate')),
                ('pontuacao_bye', models.PositiveIntegerField(default=3, help_text='Pontos por bye')),
                ('quantidade_rodadas', models.PositiveIntegerField(blank=True, help_text='Quantidade de rodadas do torneio', null=True)),
                ('data_inicio', models.DateTimeField(help_text='Data e hora de início do torneio')),
                ('id_loja', models.ForeignKey(help_text='Usuário (loja) que criou o torneio.', on_delete=django.db.models.deletion.CASCADE, related_name='torneios_criados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='rodada',
            name='id_torneio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rodadas', to='torneios.torneio'),
        ),
        migrations.CreateModel(
            name='MesaJogador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(help_text='1 ou 2, para definir a equipe do jogador na mesa.')),
                ('id_mesa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jogadores_na_mesa', to='torneios.mesa')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['id_usuario', 'id_mesa'], name='jogador_mesa_idx')],
                'unique_together': {('id_mesa', 'id_usuario')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='rodada',
            unique_together={('id_torneio', 'numero_rodada')},
        ),
        migrations.CreateModel(
            name='RankingParcial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rodada_numero', models.IntegerField(help_text='Até qual rodada foi calculado')),
                ('pontos_totais', models.IntegerField(default=0, help_text='Pontos totais acumulados até a rodada')),
                ('mw_percentage', models.DecimalField(decimal_places=4, help_text='Match Win Percentage (floor 33%)', max_digits=5)),
                ('omw_percentage', models.DecimalField(decimal_places=4, help_text='Opponent Match Win Percentage - força dos oponentes', max_digits=5)),
                ('pmw_percentage', models.DecimalField(decimal_places=4, help_text='Partner Match Win Percentage - força dos parceiros', max_digits=5)),
                ('balanco', models.DecimalField(decimal_places=4, help_text='OMW% - PMW% (pode ser negativo)', max_digits=6)),
                ('posicao', models.IntegerField(help_text='Posição no ranking nesta rodada')),
                ('data_calculo', models.DateTimeField(auto_now=True, help_text='Data do último cálculo')),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to=settings.AUTH_USER_MODEL)),
                ('id_torneio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings_parciais', to='torneios.torneio')),
            ],
            options={
                'ordering': ['id_torneio', 'rodada_numero', 'posicao'],
                'indexes': [models.Index(fields=['id_torneio', 'rodada_numero'], name='torneio_rodada_idx'), models.Index(fields=['id_torneio', 'rodada_numero', 'posicao'], name='ranking_lookup_idx')],
                'unique_together': {('id_torneio', 'id_usuario', 'rodada_numero')},
            },
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decklist', models.TextField(blank=True, help_text='Lista de cartas do deck do jogador.')),
                ('status', models.CharField(default='Inscrito', help_text="'Inscrito', 'Cancelado', ou 'Inativo'", max_length=50)),
                ('data_inscricao', models.DateTimeField(auto_now_add=True, help_text='Data da primeira inscrição')),
                ('data_saida', models.DateTimeField(blank=True, help_text='Data em que saiu ou foi removido', null=True)),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to=settings.AUTH_USER_MODEL)),
                ('id_torneio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscritos', to='torneios.torneio')),
            ],
            options={
                'unique_together': {('id_usuario', 'id_torneio')},
            },
        ),
    ]
